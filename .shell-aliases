# ignore case, long prompt, exit if it fits on one screen, allow colors for ls and grep colors
alias less='less -iMFSRX'

alias pss='ps -o uname,pid,ppid,c,%cpu,cputime=CPU-time,%mem,rss,start,wchan,args --cols 2000 -C'
alias p="ps aux |grep -i "
alias h="history|grep -i "
alias f="find . |grep -i "
alias sc="screen -DR"
alias j='\jobs -l'
alias fgg='\fg %'
alias bgg='\bg %'

# Puts the newest file at the bottom, right above the prompt
# l=long : h=human readable sizes : a=all : r=reverse sort : t=time sort : F=append indicator (one of */=>@|)
alias lt='\ls --color=auto -lhFart'
alias ll='\ls --color=auto -lhFa'
alias ls='\ls --color=auto -ghFA'
alias  l='\ls --color=auto -F'
alias dir='\dir --color=auto'
alias vdir='\vdir --color=auto'

pss() { ps -o pid,user,c,start,args -C "$1" --cols 2000 "$@" ;}

s() { # do sudo, or sudo the last command if no argument given
  if [[ $# == 0 ]]; then
    sudo $(history -p '!!')
  else
    sudo "$@"
  fi
}

mvln() {
  test $# -ne 2 && echo "\
$(basename "$0") - Moves a file or dir to <TARGET> and creates a relative symlink in its original place
Usage: $0 <SRC> <TARGET>\
" && return 1
  local src="$1"; shift
  local target="$1"; shift
  local custom_target_name=1; test -e "$target" && custom_target_name=''
  mv -iv "$src" "$target"
  local basesrc="$(basename "$src")" dirsrc="$(dirname "$src")"
  local basetarget="$basesrc"
  test "$custom_target_name" &&  basetarget="$(basename "$target")" && target="$(dirname "$target")"
  local relpath="$(realpath --relative-to "$dirsrc" "$target")"
  ln -sv "$relpath/$basetarget" "$src"
}

# Docker

# Remove unused containers
alias docker-rm-unused='docker rm $(docker ps -q -f status=exited)'
# Remove unused images
alias docker-rmi-unused='docker rmi $(docker images -q -f dangling=true)'
# Remove volumes
alias docker-rmvolumes='docker volume rm $(docker volume ls -q -f dangling=true)'

# Examples:
# drun elifarley/docker-cep:alpine bash -c ls
# drun elifarley/docker-cep:alpine
drun() {
  im="$1"; shift; name="${im##*/}"; name=$(echo $name | tr ' :' '_.' ); ep=${1:-sh}; test $# -gt 0 && shift
  ( set -x; docker run --rm -it --entrypoint="$ep" --name $name "$im" "$@")
}

docker_ls() {
  local cmd="$1"; shift
  local repo="$1"; shift
  local lpw="$(jq -r '.auths["https://index.docker.io/v1/"].auth' ~/.docker/config.json | base64 -d)"
  docker-ls "$cmd" --user "${lpw%:*}" --password "${lpw#*:}" "$repo"
}
